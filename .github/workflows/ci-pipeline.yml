name: CI Pipeline with Docker and SonarQube

on:
  pull_request:
    branches: [ "main" ]

jobs:
  sonarQubeAnalysis:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:community
        options: >-
          --health-cmd='curl --fail http://localhost:9000/api/system/health || exit 1'
          --health-interval=5s
          --health-timeout=30s
          --health-retries=10
          --name sonarqube
        ports:
          - 9000:9000
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and Run Docker Container
      run: |
        docker-compose -f backend/docker-compose.yml up -d --build

    - name: Wait for SonarQube to be ready
      run: |
        echo "Waiting for SonarQube to be ready..."
        until curl -s http://localhost:9000/api/system/status | grep -q '"status":"UP"'; do
          echo "Waiting for SonarQube..."
          sleep 10
        done

    - name: SonarQube Scan
      env:
        SONAR_HOST_URL: http://localhost:9000
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        docker exec -it backend mvn sonar:sonar \
          -Dsonar.projectKey=your-project-key \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

    - name: Verify Code Coverage
      run: |
        docker exec -it backend mvn jacoco:report

    - name: Shutdown Docker Compose
      run: |
        docker-compose -f backend/docker-compose.yml down
